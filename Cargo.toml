cargo-features = ["codegen-backend"]

[workspace]
members = [".", "bevy_procedural_terrain_gen"]
resolver = "3"

[package]
name = "track_geometry"
version = "0.1.0"
edition = "2024"
description = "A playground for visualizing and optimzing railway alignments"
license-file = "./LICENSE"
repository = "https://github.com/wildwestrom/track-geometry-experiments"
readme = "./README.MD"
keywords = ["geometry", "railway", "road", "optimization"]
categories = ["simulation", "visualization"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
bevy = { version = "0.17.2", default-features = false, features = [
  "std",
  "bevy_pbr",
  "bevy_text",
  "bevy_winit",
  "bevy_window",
  "multi_threaded",
  # "bevy_ui",
  "tonemapping_luts",
  "default_font",
  "bevy_log",
  "bevy_picking",
  "bevy_mesh_picking_backend",
  "bevy_ui_picking_backend",
  "bevy_post_process",
  # "png",
  "bevy_scene",
  "bevy_gltf",
  "bevy_gizmos",
  # # non-default-features as of 0.16.1
  "wayland",
  "serialize",
  # # use during development
  # "dynamic_linking",
  # "bevy_dev_tools",
] }
bevy_panorbit_camera = { version = "0.31.0", features = ["bevy_egui"] }
# camera rotating breaks on 0.27.1
bevy_egui = "0.38.0"
log = { version = "0.4.28", features = [
  "max_level_debug",
  "release_max_level_warn",
] }
noise = "0.9.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
bevy_tweening = "0.14.0"
spec_math = "0.1.6"
bevy_procedural_terrain_gen = { path = "bevy_procedural_terrain_gen" }


[dependencies]
bevy = { workspace = true }
bevy_panorbit_camera = { workspace = true }
bevy_egui = { workspace = true }
log = { workspace = true }
anyhow = { workspace = true }
bevy_tweening = { workspace = true }
spec_math = { workspace = true }
bevy_procedural_terrain_gen = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }


# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"
